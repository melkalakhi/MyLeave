//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("LeaveManagementModel", "CompanyLeave", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MyLeave.Entities.Company), "Leave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MyLeave.Entities.Leave))]

#endregion

namespace MyLeave.Entities
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class LeaveManagementModelContainer : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet LeaveManagementModelContainer à l'aide de la chaîne de connexion trouvée dans la section 'LeaveManagementModelContainer' du fichier de configuration d'application.
        /// </summary>
        public LeaveManagementModelContainer() : base("name=LeaveManagementModelContainer", "LeaveManagementModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet LeaveManagementModelContainer.
        /// </summary>
        public LeaveManagementModelContainer(string connectionString) : base(connectionString, "LeaveManagementModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet LeaveManagementModelContainer.
        /// </summary>
        public LeaveManagementModelContainer(EntityConnection connection) : base(connection, "LeaveManagementModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<PublicHoliday> PublicHoliday
        {
            get
            {
                if ((_PublicHoliday == null))
                {
                    _PublicHoliday = base.CreateObjectSet<PublicHoliday>("PublicHoliday");
                }
                return _PublicHoliday;
            }
        }
        private ObjectSet<PublicHoliday> _PublicHoliday;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Leave> Leave
        {
            get
            {
                if ((_Leave == null))
                {
                    _Leave = base.CreateObjectSet<Leave>("Leave");
                }
                return _Leave;
            }
        }
        private ObjectSet<Leave> _Leave;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Company> Company
        {
            get
            {
                if ((_Company == null))
                {
                    _Company = base.CreateObjectSet<Company>("Company");
                }
                return _Company;
            }
        }
        private ObjectSet<Company> _Company;

        #endregion

        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet PublicHoliday. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToPublicHoliday(PublicHoliday publicHoliday)
        {
            base.AddObject("PublicHoliday", publicHoliday);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Leave. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToLeave(Leave leave)
        {
            base.AddObject("Leave", leave);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Company. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToCompany(Company company)
        {
            base.AddObject("Company", company);
        }

        #endregion

    }

    #endregion

    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeaveManagementModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Company.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="recruitementDate">Valeur initiale de la propriété RecruitementDate.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String name, global::System.DateTimeOffset recruitementDate)
        {
            Company company = new Company();
            company.ID = id;
            company.Name = name;
            company.RecruitementDate = recruitementDate;
            return company;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset RecruitementDate
        {
            get
            {
                return _RecruitementDate;
            }
            set
            {
                OnRecruitementDateChanging(value);
                ReportPropertyChanging("RecruitementDate");
                _RecruitementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecruitementDate");
                OnRecruitementDateChanged();
            }
        }
        private global::System.DateTimeOffset _RecruitementDate;
        partial void OnRecruitementDateChanging(global::System.DateTimeOffset value);
        partial void OnRecruitementDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> EndOfMissionDate
        {
            get
            {
                return _EndOfMissionDate;
            }
            set
            {
                OnEndOfMissionDateChanging(value);
                ReportPropertyChanging("EndOfMissionDate");
                _EndOfMissionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndOfMissionDate");
                OnEndOfMissionDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _EndOfMissionDate;
        partial void OnEndOfMissionDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnEndOfMissionDateChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeaveManagementModel", "CompanyLeave", "Leave")]
        public EntityCollection<Leave> Leave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Leave>("LeaveManagementModel.CompanyLeave", "Leave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Leave>("LeaveManagementModel.CompanyLeave", "Leave", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeaveManagementModel", Name="HijriHoliday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HijriHoliday : PublicHoliday
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet HijriHoliday.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="day">Valeur initiale de la propriété Day.</param>
        /// <param name="month">Valeur initiale de la propriété Month.</param>
        /// <param name="year">Valeur initiale de la propriété Year.</param>
        public static HijriHoliday CreateHijriHoliday(global::System.Int32 id, global::System.Int16 day, global::System.Int16 month, global::System.Int16 year)
        {
            HijriHoliday hijriHoliday = new HijriHoliday();
            hijriHoliday.ID = id;
            hijriHoliday.Day = day;
            hijriHoliday.Month = month;
            hijriHoliday.Year = year;
            return hijriHoliday;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeaveManagementModel", Name="Leave")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Leave : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Leave.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="startDate">Valeur initiale de la propriété StartDate.</param>
        public static Leave CreateLeave(global::System.Int32 id, global::System.DateTimeOffset startDate)
        {
            Leave leave = new Leave();
            leave.ID = id;
            leave.StartDate = startDate;
            return leave;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTimeOffset _StartDate;
        partial void OnStartDateChanging(global::System.DateTimeOffset value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LeaveManagementModel", "CompanyLeave", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LeaveManagementModel.CompanyLeave", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LeaveManagementModel.CompanyLeave", "Company").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LeaveManagementModel.CompanyLeave", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LeaveManagementModel.CompanyLeave", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeaveManagementModel", Name="NationalHoliday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NationalHoliday : PublicHoliday
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet NationalHoliday.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="day">Valeur initiale de la propriété Day.</param>
        /// <param name="month">Valeur initiale de la propriété Month.</param>
        public static NationalHoliday CreateNationalHoliday(global::System.Int32 id, global::System.Int16 day, global::System.Int16 month)
        {
            NationalHoliday nationalHoliday = new NationalHoliday();
            nationalHoliday.ID = id;
            nationalHoliday.Day = day;
            nationalHoliday.Month = month;
            return nationalHoliday;
        }

        #endregion

    
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LeaveManagementModel", Name="PublicHoliday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(NationalHoliday))]
    [KnownTypeAttribute(typeof(HijriHoliday))]
    public partial class PublicHoliday : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet PublicHoliday.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="day">Valeur initiale de la propriété Day.</param>
        /// <param name="month">Valeur initiale de la propriété Month.</param>
        public static PublicHoliday CreatePublicHoliday(global::System.Int32 id, global::System.Int16 day, global::System.Int16 month)
        {
            PublicHoliday publicHoliday = new PublicHoliday();
            publicHoliday.ID = id;
            publicHoliday.Day = day;
            publicHoliday.Month = month;
            return publicHoliday;
        }

        #endregion

        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int16 _Day;
        partial void OnDayChanging(global::System.Int16 value);
        partial void OnDayChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int16 _Month;
        partial void OnMonthChanging(global::System.Int16 value);
        partial void OnMonthChanged();

        #endregion

    
    }

    #endregion

    
}
